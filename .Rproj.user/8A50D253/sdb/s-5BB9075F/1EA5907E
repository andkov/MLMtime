{
    "contents" : "# remove all elements for a clean start\nrm(list=ls(all=TRUE))\ncat(\"\\014\")\n\n## @knitr LoadPackages\n# install.packages(\"MplusAutomation\")\nlibrary(MplusAutomation)\nlibrary(relimp)\nlibrary(dplyr)\nlibrary(ggplot2) # graphing time\nsource(\"http://www.statmodel.com/mplus-R/mplus.R\") # load \n\n## @knitr LoadData\n#load the data prepped by the \n# source(\"./Scripts/MPlus/dsG_ELSA.R\")\ndsG <- readRDS(\"./Data/Derived/Unshared/dsG_ELSA.rds\")\nm1 <- './MPlus/m1_mlm growth wcovs_elsafull_redintxn.gh5'\n\n\n## @knitr Load_mplusR_Elements\n\n# create object containing the paths to gh5 files\n\n#### Exlpore .gh5 with mplus.R graphs ####\nmplus.list.variables(m1)\n# distributions\nmplus.plot.histogram(m1,\"Y\") # immediate recall (?)\nmplus.plot.histogram(m1,\"B_Y\") # intercepts\nmplus.plot.histogram(m1,\"LINEAR\") # linear slopes\nmplus.plot.scatterplot(m1,xv = \"LINEAR\", yv=\"B_Y\") # int vs slopes\ncor(dsG$B_Y,dsG$LINEAR) # linear relationship bw random int and slopes\n\n\n\n\n## @knitr LoadGraphThemes\n#### Graphing Prep ####\nnames(dsG)\nhead(dsG)\npaletteColor4conditions <- c(\"Hypertension\"=\"#e7298a\",\n                             \"Diabetes\"=\"#d95f02\",\n                             \"Both\"=\"#7570b3\",\n                             \"None\"=\"#1b9e77\") # Colorbrewer2.org\ntrajColor <- \"midnightblue\"\n\n\nbaseSize <- 12 # set as the point of further reference\ntheme1 <- ggplot2::theme_bw(base_size=baseSize) +\n  ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = baseSize+1)) +\n  ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\", size=baseSize-2)) +\n  ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\")) +\n  ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\")) +\n  ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\")) +\n  ggplot2::theme(text = element_text(size =baseSize+7)) \n\n#### Define sampled files ####\nds300 <- sample(unique(dsG$PID),size = 300)\nds600 <- sample(unique(dsG$PID),size = 600)\nds1000 <- sample(unique(dsG$PID),size = 1000)\nds1500 <- sample(unique(dsG$PID),size = 1500)\nds3000 <- sample(unique(dsG$PID),size = 3000)\ndsAll <- unique(dsG$PID)\n\n## @knitr TotalCount\n#### Total counts ####\n# Cross-sectional view: frequence of irecall\np <- ggplot2::ggplot(dsG, aes(x=waveF))\n# canvas\np <- p + geom_bar(aes(fill=condition), alpha=.6)\np <- p + facet_grid(dbts ~ hptn)\np <- p + scale_fill_manual(values=paletteColor4conditions)\np <- p + guides(fill = guide_legend(reverse=F, title=\"Diagnosis at A\")) \np <- p + theme1\np\n\n## @knitr SampledCount\n#### Sampled counts ####\n# Cross-sectional view: frequence of irecall\nds <- dplyr::filter(dsG, PID %in% ds300) \n# canvas\np <- ggplot2::ggplot(ds, aes(x=waveF))\np <- p + geom_bar(aes(fill=condition), alpha=.6)\np <- p + facet_grid(dbts ~ hptn)\np <- p + scale_fill_manual(values=paletteColor4conditions)\np <- p + guides(fill = guide_legend(reverse=F, title=\"Diagnosis at A\")) \np <- p + theme1\np\n\n\n## @knitr ObservedLines\n#### Observed Trajectories####\nhead(dsG) # inspect\nlength(unique(dsG$PID)) # effective sample size\n#  select only some ids, otherwise large N overloads graphing\ndsM <- dsG\n# canvas\np <- ggplot2::ggplot(dsM[dsM$PID %in% ds300,], # take subsample\n                     aes(x=TIME,y=Y, group=PID))\n# alt: source(\"./Scripts/Graphs/TrajectoryLines.R)\n        # lines\n        p <- p + geom_line(aes(group=PID), color=trajColor, alpha=.1,\n                           position=position_jitter(w=.0, h=.2), size=3)\n        # points\n        p <- p + geom_point(shape=21, color=\"black\", fill=\"white\",                 \n                            alpha=1, size=3, \n                            position=position_jitter(w=.0, h=.2))\n        # scales\n        p <- p + scale_x_continuous(limits=c(0,8),\n                                    breaks=c(0:8))\n        p <- p + scale_y_continuous(limits=c(0,10), \n                                    breaks=seq(0,10, by=1))\n        # annotation\n        p <- p + labs(list(title=\"Score on immediate recall ( sample of 300 )\",\n                           x=\"Time after baseline ( jitter = 0 )\", y=\"irecall ( jitter = 0.2 )\"))\n        p <- p + theme1\n        p <- p + facet_grid(hptn ~ dbts)\n# alt: source(\"./Scripts/Graphs/TrajectoryLines.R)\nobsY <- p\nobsY \n\n\n\n\n## @knitr ModeledLines_0\n####  Predicted Trajectories ####\n\n# compute predictions (Empty growth model)\ndsM <- dplyr::mutate(dsG,\n                     yHat = B_Y + LINEAR*TIME) %>%\n  dplyr::arrange(PID)\nhead(dsM,7)\n\n# canvas\np <- ggplot2::ggplot(dsM[dsM$PID %in% ds300,], # take subsample\n                     aes(x=TIME,y=yHat, group=PID))\n# alt: source(\"./Scripts/Graphs/TrajectoryLines.R)\n      # lines\n      p <- p + geom_line(aes(group=PID), color=trajColor, alpha=.1,\n                         position=position_jitter(w=.0, h=.0), size=3)\n      # points\n      p <- p + geom_point(shape=21, color=\"black\", fill=\"white\",                 \n                          alpha=1, size=3, \n                          position=position_jitter(w=.0, h=.0))\n      # scales\n      p <- p + scale_x_continuous(limits=c(0,8),\n                                  breaks=c(0:8))\n      p <- p + scale_y_continuous(limits=c(0,10), \n                                  breaks=seq(0,10, by=1))\n      # annotation\n      p <- p + labs(list(title=\"Score on immediate recall ( sample of 300 )\",\n                         x=\"Time after baseline\", y=\"irecall\"))\n      p <- p + theme1\n      p <- p + facet_grid(hptn ~ dbts)\n# alt: source(\"./Scripts/Graphs/TrajectoryLines.R)\nhatY <- p\nhatY \n\n\n\n\n## @knitr LoadModel_ELSA\n\n####  Predicted Trajectories with Effects ####\n\n# compute predictions (Empty growth model)\ndsM <- dplyr::mutate(dsG, yHat = B_Y + LINEAR*TIME)\n     \n# Model Results : Fixed effects       \nint =                 4.602\nslope =              -0.064 \n# Adjustment to the intercept : Y ON\ni.SEX         =       0.172  \ni.AGE         =      -0.059  \ni.ED          =       0.208  \ni.EVERSMOKE   =      -0.028  \ni.BLCHF       =       0.043  \ni.BLMI        =      -0.153  \ni.BLSTK       =      -0.300  \ni.BLHTN       =       0.046  \ni.BLDM        =      -0.120  \ni.BLHTNDM     =      -0.097  \ni.AGE_SEX     =      -0.003  \ni.AGE_HTN     =       0.007  \ni.AGE_DM      =       0.007  \ni.SEX_HTN     =       0.024  \ni.SEX_DM      =      -0.008    \n# Adjustment to the slope :  LINEAR ON\ns.SEX         =       0.010  \ns.AGE         =      -0.003  \ns.ED          =       0.000  \ns.EVERSMOKE   =       0.001  \ns.BLCHF       =       0.033  \ns.BLMI        =       0.002  \ns.BLSTK       =       0.003   \ns.BLHTN       =      -0.018   \ns.BLDM        =       0.012   \ns.BLHTNDM     =       0.029   \ns.AGE_SEX     =       0.000   \ns.AGE_HTN     =      -0.001   \ns.AGE_DM      =       0.001   \ns.SEX_HTN     =       0.004   \ns.SEX_DM      =      -0.055   \n\n# compute conditional predictions\nupperAge <- ( 15) # centered at 80\ncenterAge <- 0\nlowerAge <- (-15) # centered at 80\n# yPredOlderM\ndsM[,\"yPredOlderM\"] <- (\n    (int    + i.SEX*0 + upperAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n      i.AGE_SEX*upperAge*0 +  \n      i.AGE_HTN*upperAge*dsM[,\"BLHTN\"]  +  i.AGE_DM*upperAge*dsM[,\"BLDM\"] +  i.SEX_HTN*0*dsM[,\"BLHTN\"]  + i.SEX_DM*0*dsM[,\"BLDM\"]  )  +\n    (slope  + s.SEX*0 + upperAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n       s.AGE_SEX*upperAge +  \n       s.AGE_HTN*upperAge*dsM[,\"BLHTN\"]  +  s.AGE_DM*upperAge*dsM[,\"BLDM\"]  +  s.SEX_HTN*0*dsM[,\"BLHTN\"]  + s.SEX_DM*0*dsM[,\"BLDM\"] )*dsM[,\"TIME\"] )\n# yPredM\ndsM[,\"yPredM\"] <- (\n  (int    + i.SEX*0 + centerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n     i.AGE_SEX*centerAge*0 +  \n     i.AGE_HTN*centerAge*dsM[,\"BLHTN\"]  +  i.AGE_DM*centerAge*dsM[,\"BLDM\"] +  i.SEX_HTN*0*dsM[,\"BLHTN\"]  + i.SEX_DM*0*dsM[,\"BLDM\"]  )  +\n    (slope  + s.SEX*0 + centerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n       s.AGE_SEX*centerAge +  \n       s.AGE_HTN*centerAge*dsM[,\"BLHTN\"]  +  s.AGE_DM*centerAge*dsM[,\"BLDM\"]  +  s.SEX_HTN*0*dsM[,\"BLHTN\"]  + s.SEX_DM*0*dsM[,\"BLDM\"] )*dsM[,\"TIME\"] )\n# yPredYoungerM\ndsM[,\"yPredYoungerM\"] <- (\n  (int    + i.SEX*0 + lowerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n     i.AGE_SEX*lowerAge*0 +  \n     i.AGE_HTN*lowerAge*dsM[,\"BLHTN\"]  +  i.AGE_DM*lowerAge*dsM[,\"BLDM\"] +  i.SEX_HTN*0*dsM[,\"BLHTN\"]  + i.SEX_DM*0*dsM[,\"BLDM\"]  )  +\n    (slope  + s.SEX*0 + lowerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n       s.AGE_SEX*lowerAge +  \n       s.AGE_HTN*lowerAge*dsM[,\"BLHTN\"]  +  s.AGE_DM*lowerAge*dsM[,\"BLDM\"]  +  s.SEX_HTN*0*dsM[,\"BLHTN\"]  + s.SEX_DM*0*dsM[,\"BLDM\"] )*dsM[,\"TIME\"] )\n\n\n# yPredOlderF\ndsM[,\"yPredOlderF\"] <- (\n  (int    + i.SEX*1 + upperAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n     i.AGE_SEX*upperAge*1 +  \n     i.AGE_HTN*upperAge*dsM[,\"BLHTN\"]  +  i.AGE_DM*upperAge*dsM[,\"BLDM\"] +  i.SEX_HTN*1*dsM[,\"BLHTN\"]  + i.SEX_DM*1*dsM[,\"BLDM\"]  )  +\n    (slope  + s.SEX*1 + upperAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n       s.AGE_SEX*upperAge +  \n       s.AGE_HTN*upperAge*dsM[,\"BLHTN\"]  +  s.AGE_DM*upperAge*dsM[,\"BLDM\"]  +  s.SEX_HTN*1*dsM[,\"BLHTN\"]  + s.SEX_DM*1*dsM[,\"BLDM\"] )*dsM[,\"TIME\"] )\n# yPredF\ndsM[,\"yPredF\"] <- (\n  (int    + i.SEX*1 + centerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n     i.AGE_SEX*centerAge*1 +  \n     i.AGE_HTN*centerAge*dsM[,\"BLHTN\"]  +  i.AGE_DM*centerAge*dsM[,\"BLDM\"] +  i.SEX_HTN*1*dsM[,\"BLHTN\"]  + i.SEX_DM*1*dsM[,\"BLDM\"]  )  +\n    (slope  + s.SEX*1 + centerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n       s.AGE_SEX*centerAge +  \n       s.AGE_HTN*centerAge*dsM[,\"BLHTN\"]  +  s.AGE_DM*centerAge*dsM[,\"BLDM\"]  +  s.SEX_HTN*1*dsM[,\"BLHTN\"]  + s.SEX_DM*1*dsM[,\"BLDM\"] )*dsM[,\"TIME\"] )\n# yPredYoungerF\ndsM[,\"yPredYoungerF\"] <- (\n  (int    + i.SEX*1 + lowerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n     i.AGE_SEX*lowerAge*1 +  \n     i.AGE_HTN*lowerAge*dsM[,\"BLHTN\"]  +  i.AGE_DM*lowerAge*dsM[,\"BLDM\"] +  i.SEX_HTN*1*dsM[,\"BLHTN\"]  + i.SEX_DM*1*dsM[,\"BLDM\"]  )  +\n    (slope  + s.SEX*1 + lowerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n       s.AGE_SEX*lowerAge +  \n       s.AGE_HTN*lowerAge*dsM[,\"BLHTN\"]  +  s.AGE_DM*lowerAge*dsM[,\"BLDM\"]  +  s.SEX_HTN*1*dsM[,\"BLHTN\"]  + s.SEX_DM*1*dsM[,\"BLDM\"] )*dsM[,\"TIME\"] )\n\n\n\n\n# #############################\n# dsM[,\"yPredM\"] <- (\n#   (int    + i.SEX*0 + centerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#      i.AGE_SEX*centerAge +  \n#      i.AGE_HTN*centerAge  +  i.AGE_DM*centerAge +  i.SEX_HTN*0  + i.SEX_DM*0 )  +\n#     (slope  + s.SEX*0 + centerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#        s.AGE_SEX*centerAge +  \n#        s.AGE_HTN*centerAge  +  s.AGE_DM*centerAge +  s.SEX_HTN*0  + s.SEX_DM*0)*dsM[,\"TIME\"] )\n# \n# dsM[,\"yPredYoungerM\"] <- (\n#   (int    + i.SEX*0 + lowerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#      i.AGE_SEX*lowerAge +  \n#      i.AGE_HTN*lowerAge  +  i.AGE_DM*lowerAge +  i.SEX_HTN*0  + i.SEX_DM*0 )  +\n#     (slope  + s.SEX*0 + lowerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#        s.AGE_SEX*lowerAge +  \n#        s.AGE_HTN*lowerAge  +  s.AGE_DM*lowerAge +  s.SEX_HTN*0  + s.SEX_DM*0)*dsM[,\"TIME\"] )\n# \n# head(dsM)\n# \n# dsM[,\"yPredOlderF\"] <- (\n#   (int    + i.SEX*1 + upperAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#      i.AGE_SEX*upperAge +  \n#      i.AGE_HTN*upperAge  +  i.AGE_DM*upperAge +  i.SEX_HTN*1  + i.SEX_DM*1 )  +\n#     (slope  + s.SEX*1 + upperAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#        s.AGE_SEX*upperAge +  \n#        s.AGE_HTN*upperAge  +  s.AGE_DM*upperAge +  s.SEX_HTN*1  + s.SEX_DM*1)*dsM[,\"TIME\"] )\n# \n# dsM[,\"yPredF\"] <- (\n#   (int    + i.SEX*1 + centerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#      i.AGE_SEX*centerAge +  \n#      i.AGE_HTN*centerAge  +  i.AGE_DM*centerAge +  i.SEX_HTN*1  + i.SEX_DM*1 )  +\n#     (slope  + s.SEX*1 + centerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#        s.AGE_SEX*centerAge +  \n#        s.AGE_HTN*centerAge  +  s.AGE_DM*centerAge +  s.SEX_HTN*1  + s.SEX_DM*1)*dsM[,\"TIME\"] )\n# \n# dsM[,\"yPredYoungerF\"] <- (\n#   (int    + i.SEX*1 + lowerAge*i.AGE  + i.BLHTN*dsM[,\"BLHTN\"]  + i.BLDM*dsM[,\"BLDM\"]  + i.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#      i.AGE_SEX*lowerAge +  \n#      i.AGE_HTN*lowerAge  +  i.AGE_DM*lowerAge +  i.SEX_HTN*1  + i.SEX_DM*1 )  +\n#     (slope  + s.SEX*1 + lowerAge*s.AGE  + s.BLHTN*dsM[,\"BLHTN\"]  + s.BLDM*dsM[,\"BLDM\"]  + s.BLHTNDM*dsM[,\"BLHTNDM\"] +\n#        s.AGE_SEX*lowerAge +  \n#        s.AGE_HTN*lowerAge  +  s.AGE_DM*lowerAge +  s.SEX_HTN*1  + s.SEX_DM*1)*dsM[,\"TIME\"] )\n# \n# head(dsM)\n# ########\n\n## @knitr ModeledLines_1\n# canvas\np <- ggplot2::ggplot(dsM[dsM$PID %in% ds300,], # take subsample\n                     aes(x=TIME,y=yHat, group=PID))\n    # lines\n    p <- p + geom_line(aes(group=PID), color=\"midnightblue\", alpha=.1,\n                       position=position_jitter(w=.0, h=.0), size=3)\n    # points\n    p <- p + geom_point(shape=21, color=\"black\", fill=\"white\",                 \n                        alpha=.6, size=2, \n                        position=position_jitter(w=.0, h=.0))\n    # scales\n    p <- p + scale_x_continuous(limits=c(0,8),\n                                breaks=c(0:8))\n    p <- p + scale_y_continuous(limits=c(0,10), \n                                breaks=seq(0,10, by=1))\n    # annotation\n    p <- p + labs(list(title=\"Score on immediate recall ( sample of 300 )\",\n                       x=\"Time after baseline\", y=\"irecall\"))\n    p <- p + theme1\n    p <- p + facet_grid(hptn ~ dbts)\n# Males\np <- p + geom_line(aes(y=yPredOlderM), color=\"green\", size=.4, alpha=1)\np <- p + geom_line(aes(y=yPredM), color=\"green\", size=.4, alpha=1)\np <- p + geom_line(aes(y=yPredYoungerM), color=\"green\", size=.4, alpha=1)\n# Females\np <- p + geom_line(aes(y=yPredOlderF), color=\"red\", size=.4)\np <- p + geom_line(aes(y=yPredF), color=\"red\", size=.4)\np <- p + geom_line(aes(y=yPredYoungerF), color=\"red\", size=.4)\np \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n## @knitr ModeledLines_AGE\n# #### Modeled Lined + Adjustments ####\n# \n# \n# \n# length(unique(dsG$PID)) # sample size used in modeling\n# #  select only N ids\n# ds <- dplyr::filter(dsM, PID %in% ds300) \n# # canvas \n# p <- hatY\n# p <- p + geom_line(ase(y=yPred), color=\"red\")\n# p",
    "created" : 1428009909712.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "636529893",
    "id" : "1EA5907E",
    "lastKnownWriteTime" : 1426896962,
    "path" : "~/GitHub/Diabetes-Tri-Study/Reports/ELSA_2/ELSA_report.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}