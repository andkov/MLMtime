{
    "contents" : "# remove all elements for a clean start\nrm(list=ls(all=TRUE))\ncat(\"\\014\")\n\n## @knitr InstallPackage\n# source(\"./Scripts/Utility/InstallPackages.R\")\n\n## @knitr LoadPackages\nrequire(sas7bdat) # for inputting data \nlibrary(dplyr) # for general data manipulation\nlibrary(reshape2) # for data : wide <-> long\nlibrary(psych) # data summary + etc\nlibrary(ggplot2) # graphing\nlibrary(nlme) # estimate mixed models | esp. gls()\nlibrary(lme4) # estimate mixed models | esp. lmer()\nlibrary(arm)  # process model objects\n\n## @knitr LoadData\npathDir  <- getwd() # get working directory, e.i. residence of .Rproj file\npathFile  <- file.path(pathDir,\"Chapters/05/SAS_Chapter5/SAS_Chapter5.sas7bdat\") # location of the file\n# ds0   <- read.sas7bdat(pathFile, debug=TRUE) # import file \nds0 <- readRDS(\"~/GitHub/psy564/Data/Derived/ELSA/dsM_ELSA.rds\")\nds0 <- data.frame(ds0) # save as a data frame \n\n \n\n\n## @knitr BasicDescriptive\nclass(ds0) # what class?\ndim(ds0)  # what dimensions?\nnames(ds0) # what are column names?\nstr(ds0) # what its structure?\nhead(ds0) # what do first few lines look like?\nbase::summary(ds0) # basic summary\npsych::describe(ds0) # summary by psych package\ntable(ds0$wave)# one-way table\n\n\n## @knitr StackData\ndsL <- ds0\n\n## @knitr TweakLong\ndsM <- dsL\ndsM <- dplyr::filter(dsM, id %in% sample(unique(id),100))\n\n## @knitr dummyChunk\n#### Basic Graphs  ####\n\n## @knitr GraphingData0\np <- ggplot2::ggplot(dsM,aes(x=wave,y=irecall)) # map data dimension\np <- p + geom_line(aes(group=id)) # draw lines and map unit of measurement\np\n\n## @knitr LoadGraphThemes\nbaseSize <- 12 # set as the point of further reference\ntheme1 <- ggplot2::theme_bw(base_size=baseSize) +\n  ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = baseSize+1)) +\n  ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\", size=baseSize-2)) +\n  ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\")) +\n  ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\")) +\n  ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\")) +\n  ggplot2::theme(text = element_text(size =baseSize+7)) \n\n## @knitr GraphingData1\np <- ggplot2::ggplot(dsM,aes(x=wave,y=irecall))\np <- p + geom_line(aes(group=id)) # draw lines\np <- p + theme1 \np <- p + scale_x_continuous(limits=c(1,4), breaks=c(1:4)) # X axis\np <- p + scale_y_continuous(limits=c(0,10), \n                            breaks=seq(0,10, by=1)) # Y axis\np <- p + labs(list(\n  title=\"Does outcome change over time?\", # main title\n  x=\"Wave of measurement\", y=\"Performance on the outcome\")) # axes titles\np\n\n\n## @knitr GraphingData2\np <- ggplot2::ggplot(dsM,aes(x=wave,y=irecall))\np <- p + geom_line(aes(group=id)) \np <- p + geom_point(size=6, shape=21, fill=\"purple\", color=\"black\", alpha=.5)\np <- p + theme1 \np <- p + scale_x_continuous(limits=c(1,4), breaks=c(1:4)) # X axis\np <- p + scale_y_continuous(limits=c(0,10), \n                            breaks=seq(0,10, by=1)) # Y axis\np <- p + labs(list(\n  title=\"Does outcome change over time?\", # main title\n  x=\"Wave of measurement\", y=\"Performance on the outcome\")) # axes titles\np\n\n## @knitr dummyChunk\n####  MODEL 3.1  ####\n\n## @knitr RunM3_1\nm3.1 <- nlme::gls(irecall ~ 1, data=dsM, method=\"ML\") # create model object\ndsM$m3.1 <- predict(m3.1) # stores values predicted by the model\nsummary(m3.1) # print a bit more info\n# str(summary(m3.1)) # to inspect object directly\n\n\n\n## @knitr InspectM3_1\nmodel  <- m3.1 # rename object for generic use\nlogLik <- summary(model)$logLik # extract log likelihood\ndeviance <- -2*logLik # extract deviance\nAIC <- AIC(model) # extract Akaike information criterion\nBIC <- BIC(model) # extract Bayesian information criterion\ndf.resid <- NA # empty slot for later use\nN <- summary(model)$dims$N  # Number of distinct data points\np <- summary(model)$dims$p  # Number of estimated parameters\nids <- length(unique(dsM$id)) # Number of unique units\ndf.resid <- N-p # residual degrees of freedom\nmInfo <- data.frame(\"logLik\" = logLik,   # collect model information indo a dataframe\n                    \"deviance\"= deviance, \n                    \"AIC\" = AIC, \"BIC\" = BIC,\n                    \"df.resid\" = df.resid, \"N\" = N, \n                    \"p\" = p, \"ids\" = ids)\nt<- t(mInfo) # transpose\nrownames(t)<-colnames(mInfo) # rename rows\nmInfo<- data.frame(new=t) # turn into a dataframe\ncolnames(mInfo) <- c(\"m3.1\") # rename columns\nmi3.1 <- mInfo # save (m)odel (o)utput of model (3.1)\nmi3.1$Coefficient <- rownames(mi3.1) # create a column with the name of each index\nm3.1 #  model results\nmi3.1 #  model information\nhead(dsM) # visual check\n\n\n## @knitr GraphM3_1\np <- ggplot2::ggplot(dsM,aes(x=wave, y=irecall))\np <- p + geom_line(aes(group=id), color=\"firebrick\", alpha=.5)  # individual trajectories\np <- p + geom_point(size=3, shape=21, fill=NA, color=\"black\", alpha=.6) # cross-section data points\np <- p + geom_line(aes(y=m3.1, group=id), color=\"royalblue3\", size=3, alpha=.05) # modelled data\np <- p + theme1 \np <- p + scale_x_continuous(limits=c(1,4), breaks=c(1:4)) # X axis\np <- p + scale_y_continuous(limits=c(0,10), \n                            breaks=seq(0,10, by=1)) # Y axis\np <- p + labs(list(\n  title=\"Does outcome change over time?\", # main title\n  x=\"Wave of measurement\", y=\"Performance on the outcome\")) # axes titles\np\n\n## @knitr dummyChunk\n####  MODEL 5.1  ####\n\n## @knitr RunM5_1\nm5.1 <- lme4::lmer(irecall ~ 1 + (1 | id), data=dsM, REML=FALSE)# create model object\ndsM$m5.1 <- predict(m5.1) # stores values predicted by the model\ndisplay(m5.1) # tidy results\n\n## @knitr InspectM5_1\nmodel <- m5.1\nmInfo<-summary(model)$AICtab\nmInfo[\"N\"]<- model@devcomp$dims[\"N\"] # number of datapoints, verify\nmInfo[\"p\"]<- model@devcomp$dims[\"p\"] # number of estimated parameters, verify\nmInfo[\"ids\"]<- (summary(model))$ngrps # number of units on level-2, here: individuals\n# mInfo<- c(mInfo, \"modelName\"=modelName)\nmInfo<-data.frame(mInfo) # turn into a dataframe\nmInfo<- plyr::rename(mInfo,replace= c(\"mInfo\"=\"m5.1\")) # rename variables\nmInfo$Coefficient <- rownames(mInfo) # save index names as a column\nmi5.1 <- mInfo # create model information  object\ndisplay(m5.1)\nmi5.1 #  model information\nhead(dsM) # visual check\n\n## @knitr GraphM5_1\np <- ggplot2::ggplot(dsM,aes(x=wave, y=irecall))\np <- p + geom_line(aes(group=id), color=\"firebrick\", alpha=.2)  # individual trajectories\np <- p + geom_point(size=3, shape=21, fill=NA, color=\"black\", alpha=.6) # cross-section data points\np <- p + geom_line(aes(y=m5.1, group=id), color=\"royalblue3\", alpha=.7) # modelled data\np <- p + theme1 \np <- p + scale_x_continuous(limits=c(1,4), breaks=c(1:4)) # X axis\np <- p + scale_y_continuous(limits=c(0,10), \n                            breaks=seq(0,10, by=1)) # Y axis\np <- p + labs(list(\n  title=\"Does outcome change over time?\", # main title\n  x=\"Wave of measurement\", y=\"Performance on the outcome\")) # axes titles\np\n\n## @knitr dummyChunk\n####  MODEL 5.3  ####\n\n## @knitr RunM5_3\nm5.3 <- lme4::lmer(irecall ~ 1 + wave + (1 | id), data=dsM, REML=FALSE)# create model object\ndsM$m5.3 <- predict(m5.3) # stores values predicted by the model\ndisplay(m5.3) # tidy results\n\n## @knitr InspectM5_3\nmodel <- m5.3\nmInfo<-summary(model)$AICtab\nmInfo[\"N\"]<- model@devcomp$dims[\"N\"] # number of datapoints, verify\nmInfo[\"p\"]<- model@devcomp$dims[\"p\"] # number of estimated parameters, verify\nmInfo[\"ids\"]<- (summary(model))$ngrps # number of units on level-2, here: individuals\n# mInfo<- c(mInfo, \"modelName\"=modelName)\nmInfo<-data.frame(mInfo) # turn into a dataframe\nmInfo<- plyr::rename(mInfo,replace= c(\"mInfo\"=\"m5.3\")) # rename variables\nmInfo$Coefficient <- rownames(mInfo) # save index names as a column\nmi5.3 <- mInfo # create model information  object\ndisplay(m5.3)\nmi5.3 #  model information\nhead(dsM) # visual check\n\n## @knitr GraphM5_3\np <- ggplot2::ggplot(dsM,aes(x=wave, y=irecall))\np <- p + geom_line(aes(group=id), color=\"firebrick\", alpha=.2)  # individual trajectories\np <- p + geom_point(size=3, shape=21, fill=NA, color=\"black\", alpha=.6) # cross-section data points\np <- p + geom_line(aes(y=m5.3, group=id), color=\"royalblue3\", alpha=.7) # modelled data\np <- p + theme1 \np <- p + scale_x_continuous(limits=c(1,4), breaks=c(1:4)) # X axis\np <- p + scale_y_continuous(limits=c(0,10), \n                            breaks=seq(0,10, by=1)) # Y axis\np <- p + labs(list(\n  title=\"Does outcome change over time?\", # main title\n  x=\"Wave of measurement\", y=\"Performance on the outcome\")) # axes titles\np\n\n## @knitr dummyChunk\n####  MODEL 5.5  ####\n\n## @knitr RunM5_5\nm5.5 <- lme4::lmer(irecall ~ 1 + wave + (1 + wave | id), data=dsM, REML=FALSE)# create model object\ndsM$m5.5 <- predict(m5.5) # stores values predicted by the model\ndisplay(m5.5) # tidy results\n\n## @knitr InspectM5_5\nmodel <- m5.5\nmInfo<-summary(model)$AICtab\nmInfo[\"N\"]<- model@devcomp$dims[\"N\"] # number of datapoints, verify\nmInfo[\"p\"]<- model@devcomp$dims[\"p\"] # number of estimated parameters, verify\nmInfo[\"ids\"]<- (summary(model))$ngrps # number of units on level-2, here: individuals\n# mInfo<- c(mInfo, \"modelName\"=modelName)\nmInfo<-data.frame(mInfo) # turn into a dataframe\nmInfo<- plyr::rename(mInfo,replace= c(\"mInfo\"=\"m5.5\")) # rename variables\nmInfo$Coefficient <- rownames(mInfo) # save index names as a column\nmi5.5 <- mInfo # create model information  object\ndisplay(m5.5)\nmi5.5 #  model information\nhead(dsM) # visual check\n\n## @knitr GraphM5_5\np <- ggplot2::ggplot(dsM,aes(x=wave, y=irecall))\np <- p + geom_line(aes(group=id), color=\"firebrick\", alpha=.2)  # individual trajectories\np <- p + geom_point(size=3, shape=21, fill=NA, color=\"black\", alpha=.6) # cross-section data points\np <- p + geom_line(aes(y=m5.5, group=id), color=\"royalblue3\", alpha=.7) # modelled data\np <- p + theme1 \np <- p + scale_x_continuous(limits=c(1,4), breaks=c(1:4)) # X axis\np <- p + scale_y_continuous(limits=c(0,10), \n                            breaks=seq(0,10, by=1)) # Y axis\np <- p + labs(list(\n  title=\"Does outcome change over time?\", # main title\n  x=\"Wave of measurement\", y=\"Performance on the outcome\")) # axes titles\np",
    "created" : 1422599509988.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4250489940",
    "id" : "8A3C2467",
    "lastKnownWriteTime" : 1422600671,
    "path" : "~/GitHub/psy564/Chapters/05/R_Chapter5/ch5-ELSA.R",
    "project_path" : "Chapters/05/R_Chapter5/ch5-ELSA.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}