{
    "contents" : "# remove all elements for a clean start\nrm(list=ls(all=TRUE))\n# Supplementary Material for Longitudinal Analysis: Modeling Within-Person Fluctuation and Change \n# Chapter 2: MPLUS Syntax and Output by Model\n\n## @knitr LoadPackages\nrequire(sas7bdat)\nlibrary(nlme)\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(psych)\n\n## @knitr LoadData\npathDir  <- getwd() # get working directory, e.i. residence of .Rproj file\npathFile  <- file.path(pathDir,\"Chapters/03/SAS_Chapter3a/SAS_Chapter3a.sas7bdat\") # location of the file\nch3a   <- read.sas7bdat(pathFile, debug=TRUE) # import file \nch3a <- data.frame(ch3a) # save as a data frame \n\n\n\n\n\n## @knitr BasicDescriptive\nclass(ch3a) # what class?\ndim(ch3a)  # what dimensions?\nnames(ch3a) # what are column names?\nstr(ch3a) # what its structure?\nhead(ch3a) # what do first few lines look like?\nsummary(ch3a) # basic summary\npsych::describe(ch3a) # summary by psych package\ntable(ch3a$group)# one-way table\n\n\n## @knitr StackData\n\n# stack data into a new dataset\ndsLong <- reshape2::melt(ch3a,id.vars=c(\"PersonID\",\"group\")) # id.vars are those NOT STACKED\nhead(dsLong) # inspect\ndsLong <- dsLong[order(dsLong$PersonID, dsLong$variable),] # sort for visual inspection\nhead(dsLong) # inspect\n\n\n\n## @knitr TweakLong1\n# substitute the repeating string in column \"variable\" by nothing\ndsLong$variable <- gsub(pattern=\"outcome\", replacement='', x=dsLong$variable) \nhead(dsLong)\ndsLong <- plyr::rename(dsLong, c(\"variable\"=\"time\", \"value\"=\"outcome\")) # rename with plyr package\n# Alternatively: rename and order variables with dplyr package\n# dsLong <- dplyr::select(dsLong, id=PersonID, group,time=variable, outcome=value)\nhead(dsLong)\nds <- dsLong # save with a more convenient name\n\n## @knitr TweakLong2\nds$group <- ordered(ds$group, levels = c(1,2),\n                              labels = c(\"Control\",\"Treatment\"))\n\nds$time <- ordered(ds$time, levels = c(1,2),\n                            labels = c(\"Pre-Test\",\"Post-Test\"))\nstr(ds)\n\n## @knitr GraphingData0\np <- ggplot2::ggplot(ds,aes(x=time,y=outcome)) # map data dimension\np <- p + geom_line(aes(group=PersonID)) # draw lines and map unit of measurement\np\n\n## @knitr GraphingData1\np <- ggplot2::ggplot(ds,aes(x=time,y=outcome))\np <- p + geom_line(aes(group=PersonID, color=group)) # map color\np <- p + scale_x_discrete(labels=c(\"Pre-Test\",\"Post-Test\")) # X axis\np <- p + scale_y_continuous(limits=c(30,70), \n                            breaks=seq(30,70, by=5)) # Y axis\np <- p + labs(list(\n  title=\"Does treatment affect test performance?\", # main title\n  x=\"Times of observation\", y=\"Test score\")) # axes titles\np\n\n\n## @knitr LoadGraphThemes\nbaseSize <- 12 # set as the point of further reference\ntheme1 <- ggplot2::theme_bw(base_size=baseSize) +\n  ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = baseSize+1)) +\n  ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\", size=baseSize-2)) +\n  ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\")) +\n  ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\")) +\n  ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\")) +\n  ggplot2::theme(text = element_text(size =baseSize+7)) \n\n\n## @knitr GraphingData2\np <- ggplot2::ggplot(ds,aes(x=time,y=outcome))\np <- p + geom_line(aes(group=PersonID, color=group))\np <- p + theme1 # add a graph theme\np <- p + scale_x_discrete(labels=c(\"Pre-Test\",\"Post-Test\"))\np <- p + scale_y_continuous(limits=c(30,70), \n                            breaks=seq(30,70, by=5))\np <- p + labs(list(\n  title=\"Does treatment affect test performance?\",\n  x=\"Times of observation\", y=\"Test score\"))\np\n\n## @knitr GraphingData3\np <- ggplot2::ggplot(ds,aes(x=time,y=outcome))\np <- p + geom_line(aes(group=PersonID, color=group))\np <- p + theme1\np <- p + scale_x_discrete(labels=c(\"Pre-Test\",\"Post-Test\"))\np <- p + scale_y_continuous(limits=c(30,70), \n                            breaks=seq(30,70, by=5))\np <- p + facet_grid(.~group) # place groups on separate graphs\np <- p + labs(list(\n  title=\"Does treatment affect test performance?\",\n  x=\"Times of observation\", y=\"Test score\"))\np\n\n\n\n## @knitr EmptyBP1\nm3.1 <- nlme::gls(outcome ~ 1, data=ds, method=\"ML\") # create model object\nm3.1 # print basic info\nsummary(m3.1) # print a bit more info\n# str(summary(m3.1)) # will get you all the elements of this model object, so you can extract what you need\nds$m3.1 <- predict(m3.1) # stores values predicted by the model\nvar(ds$outcome - ds$m3.1) # variance of the residual computed directly\nsd(ds$outcome - ds$m3.1) # standard deviation of the residual computed directly\n\n\n## @knitr EmptyBP2\nmodel  <- m3.1 # rename object for generic use\nlogLik <- summary(model)$logLik # extract log likelihood\ndeviance <- -2*logLik # extract deviance\nAIC <- AIC(model) # extract Akaike information criterion\nBIC <- BIC(model) # extract Bayesian information criterion\ndf.resid <- NA # empty slot for later use\nN <- summary(model)$dims$N  # Number of distinct data points\np <- summary(model)$dims$p  # Number of estimated parameters\nids <- length(unique(ds$PersonID)) # Number of unique units\ndf.resid <- N-p # residual degrees of freedom\nmInfo <- data.frame(\"logLik\" = logLik,   # collect model information indo a dataframe\n                   \"deviance\"= deviance, \n                   \"AIC\" = AIC, \"BIC\" = BIC,\n                   \"df.resid\" = df.resid, \"N\" = N, \n                   \"p\" = p, \"ids\" = ids)\nt<- t(mInfo) # transpose\nrownames(t)<-colnames(mInfo) # rename rows\ndsmInfo<- data.frame(new=t) # save as dataframe\ncolnames(dsmInfo) <- c(\"m3.1\") # rename columns\nmo3.1 <- dsmInfo # save (m)odel (o)utput of model (3.1)\nmo3.1$Coefficient <- rownames(mo3.1) # create a column with the name of each index\nm3.1 # model results\nmo3.1 # model performance\n\n\n## @knitr EmptyBP3\nhead(ds)\n\n## @knitr EmptyBP4\np <- ggplot2::ggplot(ds,aes(x=time,y=m3.1)) # replace the outcome with model prediction\np <- p + geom_line(aes(group=PersonID))\np <- p + theme1\np <- p + scale_x_discrete(labels=c(\"Pre-Test\",\"Post-Test\"))\np <- p + scale_y_continuous(limits=c(30,70), \n                            breaks=seq(30,70, by=5))\np <- p + facet_grid(.~group) \np <- p + labs(list(\n  title=\"Does treatment affect test performance?\",\n  x=\"Times of observation\", y=\"Test score\"))\np\n\n## @knitr EmptyBP5\np <- ggplot2::ggplot(ds,aes(x=time,y=outcome, group=PersonID))  # mapping for entire plot\np <- p + geom_line(aes(color=group)) # geom specific mapping\np <- p + geom_line(aes(y=m3.1))      # geom specific mapping\np <- p + theme1\np <- p + scale_x_discrete(labels=c(\"Pre-Test\",\"Post-Test\"))\np <- p + scale_y_continuous(limits=c(30,70), \n                            breaks=seq(30,70, by=5))\np <- p + facet_grid(.~group) \np <- p + labs(list(\n  title=\"Does treatment affect test performance?\",\n  x=\"Times of observation\", y=\"Test score\"))\np\n\n\n\n\n## @knitr EmptyWP1\nm3.2 <- lme4::lmer(outcome ~ 1 + (1 | PersonID), data=ds)# create model object\nm3.2 # print basic info\nsummary(m3.2) # print a bit more info\nds$m3.2 <- predict(m3.2) # stores values predicted by the model\nvar(ds$outcome - ds$m3.2) # variance of the residual computed directly\nsd(ds$outcome - ds$m3.2) # standard deviation of the residual computed directly\n\nds$dm1 <- ds$outcome - ds$m3.1\nds$dm2 <- ds$outcome - ds$m3.2\nhead(ds)\nsum(ds$dm1)\n\n## @knitr EmptyWP2\nmodel <- m3.2\nmInfo<-summary(model)$AICtab\nmInfo[\"N\"]<- model@devcomp$dims[\"N\"] # number of datapoints, verify\nmInfo[\"p\"]<- model@devcomp$dims[\"p\"] # number of estimated parameters, verify\nmInfo[\"ids\"]<- (summary(model))$ngrps # number of units on level-2, here: individuals\n# mInfo<- c(mInfo, \"modelName\"=modelName)\ndsmInfo<-data.frame(mInfo)\ndsmInfo<- plyr::rename(dsmInfo,replace= c(\"mInfo\"=\"m3.2\"))\ndsmInfo$Coefficient <- rownames(dsmInfo)\nmo3.2 <- dsmInfo # model information \n m3.2# model results\nmo3.2 # model performance\n\n## @knitr EmptyWP3\nhead(ds)\n\n## @knitr EmptyWP4\np <- ggplot2::ggplot(ds,aes(x=time,y=m3.2)) # replace the outcome with model prediction\np <- p + geom_line(aes(group=PersonID))\np <- p + theme1\np <- p + scale_x_discrete(labels=c(\"Pre-Test\",\"Post-Test\"))\np <- p + scale_y_continuous(limits=c(30,70), \n                            breaks=seq(30,70, by=5))\np <- p + facet_grid(.~group) \np <- p + labs(list(\n  title=\"Does treatment affect test performance?\",\n  x=\"Times of observation\", y=\"Test score\"))\np\n\n## @knitr EmptyWP5\np <- ggplot2::ggplot(ds,aes(x=time,y=outcome, group=PersonID))  # mapping for entire plot\np <- p + geom_line(aes(color=group)) # geom specific mapping\np <- p + geom_line(aes(y=m3.2))      # geom specific mapping\np <- p + theme1\np <- p + scale_x_discrete(labels=c(\"Pre-Test\",\"Post-Test\"))\np <- p + scale_y_continuous(limits=c(30,70), \n                            breaks=seq(30,70, by=5))\np <- p + facet_grid(.~group) \np <- p + labs(list(\n  title=\"Does treatment affect test performance?\",\n  x=\"Times of observation\", y=\"Test score\"))\np\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1422297477187.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2749636229",
    "id" : "D27F40FA",
    "lastKnownWriteTime" : 1422235323,
    "path" : "~/GitHub/psy564/Chapters/03/R_Chapter3/hoffman-ch3.R",
    "project_path" : "Chapters/03/R_Chapter3/hoffman-ch3.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}