{
    "contents" : "# remove all elements for a clean start\nrm(list=ls(all=TRUE))\ncat(\"\\014\")\n\n\n## @knitr InstallPackage\n# source(\"./Scripts/Utility/InstallPackages.R\")\n\n\n\n## @knitr LoadPackages\nrequire(sas7bdat) # for inputting data \nlibrary(dplyr) # for general data manipulation\nlibrary(reshape2) # for data : wide <-> long\nlibrary(psych) # data summary + etc\nlibrary(ggplot2) # graphing\nlibrary(nlme) # estimate fixed models | esp. gls()\nlibrary(lme4) # estimate mixed models | esp. lmer()\nlibrary(arm)  # process model objects\n\n\n## @knitr LoadData\nds0 <- readRDS(\"~/GitHub/psy564/Data/Raw/ELSA/ds0_ELSA.rds\")\ndim(ds0)\nlength(unique(ds0$PID))\nhead(ds0)\n\ndsL <- ds0\n \n## @knitr DataFilter\n\ntable(dsL$irecall,dsL$wave, useNA=\"ifany\") # frequency table\n# There are no valid respondes to the focal outcome, so we remove wave 5\n# Wave 0 doesn't not contain observations of interest, so remove wave 0\ndsL <- dplyr::filter(dsL, wave %in% c(1:4))  \ntable(dsL$irecall,dsL$wave, useNA=\"ifany\")\n# The missing values will complecate some of the modeling so remove for now\n\n\n## @knitr DataFilter2\n# Selecting individuals into the working dataset\nlength(unique(dsL$id))\ntable(dsL$wave)\ndsL <- dplyr::filter(dsL, (ave(!is.na(irecall), id, FUN = all))) # only complete trajectoies\ndsL <- dplyr::filter(dsL, (ave(!is.na(drecall), id, FUN = all))) # only complete trajectoies\ndsL <- dplyr::filter(dsL, (ave(!is.na(animal), id, FUN = all))) # only complete trajectoies\ndsL <- dplyr::filter(dsL, (ave(!is.na(prospect), id, FUN = all))) # only complete trajectoies\nlength(unique(dsL$id))\ntable(dsL$wave)\ndsL <- dsL[dsL$id %in% unique((dsL[dsL$wave==4,c(\"id\",\"wave\")])$id ),] # only who reached 4th wave\nlength(unique(dsL$id))\ntable(dsL$wave)\n\n\n## @knitr DataExportLong\n\n# save data for use in R\nsaveRDS(object=dsL, file=\"~/GitHub/psy564/Data/Derived/ELSA/dsL_ELSA.rds\", compress=\"xz\")  \n\n\n#### save LONG data for MPlus  ####\nwrite.table(dsL,file=\"~/GitHub/psy564/Projects/ELSA/CogDecline/dsL_ELSA.csv\",na=\"-9999\",row.names=FALSE, col.names=FALSE, sep=\",\")\n# save the header\nvarNamesL <- colnames(dsL) # get variable names\ncat(varNamesL) # print, copy, paste into Mplus\nwrite.csv(t(varNamesL), file=\"~/GitHub/psy564/Projects/ELSA/CogDecline/dsL_ELSA_varNames.csv\") # export as a csv\n\n## @knitr DataExportWide\n#### save WIDE data for MPlus ####\n\n## Transform \nhead(dsL)\nds <- dplyr::select(dsL, id, dob, sex, age, edu, ht, db, htdb, nocase, \n                    angina=ang1A, stroke=stk1A, smoked=evrsmk1A,\n                    time, wave, year, ageCur=Age,\n                    irecall, drecall, animal, prospect)\n# head(ds)\ntimeInvariant <- c( \"id\", \"dob\", \"sex\", \"age\", \"edu\", \"ht\", \"db\", \"htdb\", \"nocase\", \n                    \"angina\", \"stroke\", \"smoked\") \ntimeVariant <- c(\"time\", \"wave\", \"year\", \"ageCur\", \"irecall\", \"drecall\", \"animal\",\"prospect\")\ndsLong <- reshape2::melt(ds,id.vars = c(timeInvariant, \"wave\"), measure.vars = timeVariant )\ndsLong <- dsLong[order(dsLong$id, dsLong$variable), ]\n# head(dsLong, 20)\ndsW <- reshape2::dcast(dsLong, id + dob + sex + age + edu + ht + db + htdb + nocase + angina + stroke + smoked  ~ variable + wave, value.var=\"value\"  )\nhead(dsW)\n# Export the data\nwrite.table(dsW,file=\"~/GitHub/psy564/Projects/ELSA/CogDecline/dsW_ELSA.dat\",col.names = F)\nwrite.csv(colnames(dsW), file=\"~/GitHub/psy564/Projects/ELSA/CogDecline/dsW_ELSA_varNames.csv\")\n# Export the header\nvarNamesW <- colnames(dsW) # get variable names\ncat(varNamesW) # print, copy, paste into Mplus\nwrite.csv(t(varNamesW), file=\"~/GitHub/psy564/Projects/ELSA/CogDecline/dsW_ELSA_varNames.csv\") # export as a csv\n\n\n#### Graphing ####\n\n## @knitr LoadGraphThemes\npaletteColor4conditions <- c(\"Hypertension\"=\"red\",\n                             \"Diabetes\"=\"blue\",\n                             \"Both\"=\"purple\",\n                             \"None\"=\"grey10\")\n\n\nbaseSize <- 12 # set as the point of further reference\ntheme1 <- ggplot2::theme_bw(base_size=baseSize) +\n  ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = baseSize+1)) +\n  ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\", size=baseSize-2)) +\n  ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\")) +\n  ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\")) +\n  ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\")) +\n  ggplot2::theme(text = element_text(size =baseSize+7)) \n\n\n## @knitr CrossSectionDist\n# Cross-sectional view: irecall\np <- ggplot2::ggplot(dsL, aes(y=irecall,x=factor(year), fill=condition))\np <- p + geom_violin( adjust=1, alpha=.4 )\np <- p + scale_y_continuous(limits=c(0,10), breaks=seq(0,10,by=1))\np <- p + scale_fill_manual(values=paletteColor4conditions)\np <- p + geom_boxplot(width=1, fill=NA, color=\"black\", alpha=.5, outlier.colour=\"red\") \np <- p + stat_summary(fun.y=mean, geom=\"point\", fill=\"white\", shape=21, size=4)\np <- p + facet_grid(dbts ~ hptn)\np <- p + theme1\np\n\n## @knitr CrossSectionCount\n# Cross-sectional view: frequence of irecall\np <- ggplot2::ggplot(dsL, aes(x=factor(year)))\np <- p + scale_y_continuous(breaks=seq(0,6000,by=1000))\np <- p + geom_bar(aes(fill=condition), alpha=.4)\np <- p + facet_grid(dbts ~ hptn)\np <- p + scale_fill_manual(values=paletteColor4conditions)\np <- p + guides(fill = guide_legend(reverse=F, title=\"Diagnosis at A\")) \np <- p + theme1\np\n\n\n## @knitr MakeAgeBins\nattach(dsL)\ndsL$agecat[age <= 59] <- \"under 60\"\ndsL$agecat[age >= 60 & age <= 69] <- \"60 - 69\"\ndsL$agecat[age >= 70 & age <= 79] <- \"70 - 79\"\ndsL$agecat[age >= 80] <- \"over 80\"\ndetach(dsL)\ndsL$agecat <- ordered(dsL$agecat, levels= c(\"under 60\", \"60 - 69\", \"70 - 79\",\"over 80\"),\n                      labels =c(\"under 60\", \"60 - 69\", \"70 - 79\",\"over 80\"))\ntable(dsL$agecat)\n\n## @knitr EasyData\ndsM <- dplyr::select(dsL,id, dob, age, age80, agecat, Age, female, year, time, wave,irecall,animal,prospect, drecall ) # subset variables\nds <- dplyr::filter(dsM, id %in% sample(unique(id),100))   # select only N ids\nhead(ds)\n\n## @knitr BasicLinePlot\n\np <- ggplot2::ggplot(ds,aes(x=wave,y=irecall))\np <- p + geom_line(aes(group=id), color='firebrick',\n                   alpha=.2,\n                   position=position_jitter(w=0.1, h=0.1))\np <- p + geom_point(shape=1, color=\"black\", fill=NA,                 \n                    alpha=.4, size=2, \n                    position=position_jitter(w=0.1, h=0.2))\np <- p + scale_x_continuous(limits=c(1,4),\n                            breaks=c(1:4))\np <- p + scale_y_continuous(limits=c(0,10), \n                            breaks=seq(1,10, by=1))\np <- p + labs(list(title=\"Score on immediate recall\",\n  x=\"Wave of the observation\"))\np <- p + theme1\np\n\n\n\n\n\n## @knitr  DefineModelData\ndsM <- dplyr::select(dsL, id, dob, age, age80, agecat, Age, female, year, time, wave,irecall,animal,prospect, drecall ) %>%\n  dplyr::mutate(int =   4.929 , slope = -0.146 , Iage80 =   -0.055, Sage80 =  -0.008, \n                ypred = int + Iage80*age80 + wave*(slope + Sage80*age80),\n                yp_low = int + Iage80*(-10) + wave*(slope + Sage80*(-10)),\n                yp_mid = int + Iage80*(0) + wave*(slope + Sage80*(0)),\n                yp_high = int + Iage80*(10) + wave*(slope + Sage80*(10))) \nhead(dsM)\n\n## @knitr ProtoLines\nds <- dplyr::filter(dsM, id %in% sample(unique(id),100)) # %>% # select only N ids\np <- ggplot2::ggplot(ds,aes(x=wave,y=ypred, group=id))\np <- p + geom_line(aes(group=id), color='blue', alpha=.2)\n# p <- p + geom_point(shape=1, color=\"black\", fill=NA,                 \n#                     alpha=.4, size=2, \n#                     position=position_jitter(w=0.1, h=0.2))\np <- p + scale_x_continuous(limits=c(1,4),\n                            breaks=c(1:4))\np <- p + scale_y_continuous(limits=c(3,8), \n                            breaks=seq(3,8, by=1))\np <- p + geom_line(aes(y=yp_low), color = \"red\", linetype=\"longdash\", size=1)\np <- p + geom_line(aes(y=yp_mid), color = \"red\",  size=1.5)\np <- p + geom_line(aes(y=yp_high), color = \"red\", linetype=\"longdash\", size=1)\np <- p + labs(list(title=\"Score on immediate recall\",\n                   x=\"Wave of the observation\"))\np <- p + theme1\np\n\n\n## @knitr IndividualPredictionsAge\ncolorValues <- c(\"under 60\"=\"#1b9e77\", \n                 \"60 - 69\"=\"#d95f02\", \n                 \"70 - 79\"=\"#7570b3\",\n                 \"over 80\"=\"#e7298a\")\nds <- dplyr::filter(dsM, id %in% sample(unique(id),900)) # %>% # select only N ids\np <- ggplot2::ggplot(ds,aes(x=wave,y=ypred, group=id, color=agecat))\np <- p + scale_x_continuous(limits=c(1,4),\n                            breaks=c(1:4))\np <- p + scale_y_continuous(limits=c(3,8), \n                            breaks=seq(3,8, by=1))\np <- p + geom_line(alpha=.5, position=position_jitter(w=.1, h=.1))\np <- p + scale_color_manual(values=colorValues)\np <- p + labs(title=\"Score on immediate recall\",\n                   x=\"Wave of the observation\", color=\"Age Category\")\np <- p + guides(colour = guide_legend(override.aes = list(alpha = 1, size=4)))\np <- p + theme1\np\n\n\n\n",
    "created" : 1426010084585.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3691216784",
    "id" : "DCA685CC",
    "lastKnownWriteTime" : 1426276459,
    "path" : "~/GitHub/psy564/Projects/ELSA/CogDecline/dsELSA.R",
    "project_path" : "Projects/ELSA/CogDecline/dsELSA.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}